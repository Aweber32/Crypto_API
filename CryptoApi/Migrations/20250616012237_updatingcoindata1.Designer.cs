// <auto-generated />
using System;
using CryptoApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CryptoApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250616012237_updatingcoindata1")]
    partial class updatingcoindata1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CryptoApi.Models.CoinData", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("FearandGreed")
                        .HasColumnType("float");

                    b.Property<double?>("PercentChange1h")
                        .HasColumnType("float");

                    b.Property<double?>("PercentChange24h")
                        .HasColumnType("float");

                    b.Property<double?>("PercentChange30d")
                        .HasColumnType("float");

                    b.Property<double?>("PercentChange60d")
                        .HasColumnType("float");

                    b.Property<double?>("PercentChange7d")
                        .HasColumnType("float");

                    b.Property<double?>("PercentChange90d")
                        .HasColumnType("float");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Volume24h")
                        .HasColumnType("float");

                    b.Property<double?>("VolumeChange24h")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("CoinDatas");
                });

            modelBuilder.Entity("CryptoApi.Models.InvestorGrade", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("HoldingReturns")
                        .HasColumnType("float");

                    b.Property<double?>("QuantGrade")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TAGrade")
                        .HasColumnType("float");

                    b.Property<double?>("TMInvestorGrade")
                        .HasColumnType("float");

                    b.Property<double?>("TMTraderGrade")
                        .HasColumnType("float");

                    b.Property<double?>("TMTraderGrade24hPctChange")
                        .HasColumnType("float");

                    b.Property<string>("TokenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TokenTrend")
                        .HasColumnType("int");

                    b.Property<int?>("TradingSignal")
                        .HasColumnType("int");

                    b.Property<double?>("TradingSignalsReturns")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("InvestorGrades");
                });

            modelBuilder.Entity("CryptoApi.Models.Sentiment", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("NegativeReddit")
                        .HasColumnType("float");

                    b.Property<double?>("NeutralReddit")
                        .HasColumnType("float");

                    b.Property<double?>("PositiveReddit")
                        .HasColumnType("float");

                    b.Property<int?>("PostCountReddit")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Sentiments");
                });
#pragma warning restore 612, 618
        }
    }
}
